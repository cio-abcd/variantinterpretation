#!/bin/bash
# generated by Qwen/Qwen2.5-Coder-32B-Instruct

# Function to compute SHA-256 hash of a file
compute_hash() {
    sha256sum "$1" | awk '{print $1}'
}

# Function to compare file times
compare_files() {
    local file1="$1"
    local file2="$2"
    local diff_seconds=$(( $(stat -c %Y "$file1") - $(stat -c %Y "$file2") ))
    diff_seconds=${diff_seconds#-}  # Make the difference absolute

    if (( diff_seconds > 1 )); then
        if [[ "$file1" -nt "$file2" ]]; then
            echo "$file1 is newer than $file2"
        else
            echo "$file2 is newer than $file1"
        fi
    else
        echo "$file1 and $file2 have nearly the same age"
    fi
}

# Check for flags
diff_flag=false
match_flag=false
while [[ "$#" -gt 1 ]]; do
    case "$1" in
        --diff) diff_flag=true ;;
        --print-matching) match_flag=true ;;
        *) break ;;
    esac
    shift
done

# Base directory to start from
base_dir="$1"
if [[ -z "$base_dir" ]]; then
    echo "Usage: $0 [--diff] [--print-matching] <directory>"
    exit 1
fi

# Collect all script paths matching 'resources/usr/bin/'
mapfile -t script_paths < <(find "$base_dir" -type f -path '*/resources/usr/bin/*')

# Initialize mismatch flag
mismatch_found=false

# Compare each script with the corresponding one in <given_folder>/bin/
for script_path in "${script_paths[@]}"; do
    # Get the relative path from 'resources/usr/bin/' to the script
    relative_path="${script_path##*/resources/usr/bin/}"
    # Construct the path to the corresponding script in <given_folder>/bin/
    bin_script_path="$base_dir/bin/$relative_path"

    # Check if the script exists in <given_folder>/bin/
    if [[ -f "$bin_script_path" ]]; then
        # Compute hashes
        hash1=$(compute_hash "$script_path")
        hash2=$(compute_hash "$bin_script_path")

        # Compare hashes
        if [[ "$hash1" != "$hash2" ]]; then
            echo "Scripts differ: $script_path vs $bin_script_path"
            # Compare modification times
            compare_files "$script_path" "$bin_script_path"
            # Print diff if flag is set
            if $diff_flag; then
                echo "Diff between $script_path and $bin_script_path:"
                diff "$script_path" "$bin_script_path"
            fi
            mismatch_found=true
        elif $match_flag; then
            echo "Scripts match: $script_path and $bin_script_path"
        fi
    else
        echo "No corresponding script found in $base_dir/bin/ for $script_path"
        mismatch_found=true
    fi
done

# Exit with a nonzero code if any mismatch was found
if $mismatch_found; then
    exit 1
fi
