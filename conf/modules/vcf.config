/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: GATK4_VALIDATEVARIANTS  {
        publishDir = [
            enabled: false
        ]
        ext.args = { [
            '--validate-GVCF false',
            '--validation-type-to-exclude IDS',
            '--validation-type-to-exclude ALLELES',
            '--validation-type-to-exclude CHR_COUNTS'
        ].join(' ').trim()  }
    }

    withName: BCFTOOLS_STATS  {
        publishDir = [
            path: { "${params.outdir}/vcftests/bcftools_stats" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: VCFCHECKS {
        publishDir = [
            path: { "${params.outdir}/vcftests/" },
            mode: params.publish_dir_mode,
            pattern: '*_warnings.txt'
        ]
        ext.args = { [
            '--check_chr_prefix',
            '--check_single_sample',
            '--check_vep_annotation',
            '--check_MNPs',
            '--check_gVCF',
            '--check_other_variants',
            '--check_multiallelic_sites',
            '--check_FILTERs'
        ].join(' ').trim() }
    }

    withName: INDEX_FILT {
        publishDir = [
            enabled: false
        ]
        ext.args = { [
            '-t',
        ].join(' ').trim()   }
    }

    withName: INDEX_NORM {
        publishDir = [
            enabled: false
        ]
        ext.args = { [
            '-t',
        ].join(' ').trim()   }
    }

    withName: BCFTOOLS_NORM  {
        publishDir = [
            path: { "${params.outdir}/vcfproc/bcftools_norm" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = { [
            '-m-any',
            (params.left_align_indels) ? '--check-ref e' : '--do-not-normalize',
        ].join(' ').trim()  }
    }

    withName: VCFFILTER  {
        publishDir = [
            path: { "${params.outdir}/vcfproc/filter" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = { [
            (params.filter_vcf)    ? "--include \'FILTER=${params.filter_vcf}\'": '',
        ].join(' ').trim()  }
        ext.prefix = { "${meta.id}_filt" }
    }
}
